# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI Build

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

env:
  DOTNET_NOLOGO: true # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true # Disable sending .NET CLI telemetry

jobs:
  # MAUI Android Build
  # build-android:
  #   runs-on: windows-latest
  #   name: Android Build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup .NET 8
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: 8.0.x

  #     - name: Install MAUI Workload
  #       run: dotnet workload install maui --ignore-failed-sources

  #     - name: Ensure Directory Exists
  #       run: |
  #         if (-Not (Test-Path -Path "bin\Release\net8.0-android")) {
  #           New-Item -Path "bin\Release\net8.0-android" -ItemType Directory
  #         }

  #     - name: Restore Dependencies
  #       run: dotnet restore Youth.csproj

  #     - name: Build MAUI Android
  #       run: dotnet publish Youth.csproj -c Release -f net8.0-android --no-restore

  #     - name: List Build Artifacts
  #       run: |
  #         echo "Listing files in bin\Release\net8.0-android"
  #         dir bin\Release\net8.0-android

  #     - name: Upload Android Artifact
  #       uses: actions/upload-artifact@v4.3.4
  #       with:
  #         name: market-android-ci-build
  #         path: bin\Release\net8.0-android\*

  # # MAUI Windows Build
  # build-windows:
  #   runs-on: windows-latest
  #   name: Windows Build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup .NET 8
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: 8.0.x

  #     - name: Install MAUI Workload
  #       run: dotnet workload install maui

  #     - name: Ensure Directory Exists
  #       run: |
  #         if (-Not (Test-Path -Path "bin\x64\Release\net8.0-windows10.0.19041.0\win-x64")) {
  #           New-Item -Path "bin\x64\Release\net8.0-windows10.0.19041.0\win-x64" -ItemType Directory
  #         }

  #     - name: Restore Dependencies
  #       run: dotnet restore Youth.csproj -r win-x64

  #     - name: Build MAUI Windows
  #       run: dotnet publish Youth.csproj -c Release -f net8.0-windows10.0.19041.0 -r win-x64 --no-restore /p:PublishReadyToRun=false

  #     - name: List Build Artifacts
  #       run: |
  #         echo "Listing files in bin\x64\Release\net8.0-windows10.0.19041.0\win-x64"
  #         dir bin\x64\Release\net8.0-windows10.0.19041.0\win-x64

  #     - name: Upload Windows Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: market-windows-ci-build
  #         path: bin\x64\Release\net8.0-windows10.0.19041.0\win-x64\**\*.msix

  # MAUI iOS Build
  build-ios:
    runs-on: macos-15
    name: iOS Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Ensure Directory Exists
        run: |
          if [ ! -d "bin/Release/net8.0-ios" ]; then
            mkdir -p "bin/Release/net8.0-ios"
          fi

      - name: Restore Dependencies
        run: dotnet restore Youth.csproj

      - name: Copy and Import Certificate and Provisioning Profile
        run: |
          # Validate if required files exist
          if [ ! -f "certificate.p12" ]; then
            echo "Error: certificate.p12 file not found in the repository"
            exit 1
          fi

          if [ ! -f "cya.mobileprovision" ]; then
            echo "Error: cya.mobileprovision file not found in the repository"
            exit 1
          fi

          # Check if the certificate file exists
          if [ ! -f "certificate.p12" ]; then
            echo "Error: certificate.p12 not found."
            exit 1
          fi

          # Import the certificate
          echo "Importing certificate.p12..."
          security import certificate.p12 -A -P "Nsiimbi@2025" 2>&1 || {
            echo "Error: Failed to import certificate. Check the password or file format."
            exit 1
          }
          echo "Certificate imported successfully."

          echo "Certificate imported successfully."

          # Install Provisioning Profile
          echo "Installing provisioning profile..."
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp cya.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          echo "Provisioning profile installed successfully."

      - name: Build MAUI iOS
        run: |
          echo "Starting the iOS build..."
          dotnet build Youth.csproj -c Release -f net8.0-ios --no-restore \
            /p:buildForSimulator=True /p:packageApp=True /p:ArchiveOnBuild=False
          echo "iOS build completed."

      - name: List Build Artifacts
        run: |
          echo "Listing files in bin/Release/net8.0-ios:"
          ls -al bin/Release/net8.0-ios

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: market-ios-ci-build
          path: bin/Release/net8.0-ios/iossimulator-x64/**/*.app
# MAUI MacCatalyst Build
#  build-mac:
#    runs-on: macos-latest
#    name: MacCatalyst Build
#    steps:
#
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup .NET 8
#        uses: actions/setup-dotnet@v4
#        with:
#          dotnet-version: 8.0.x
#
#      - name: Install MAUI Workload
#        run: dotnet workload install maui --ignore-failed-sources
#
#      - name: Restore Dependencies
#        run: dotnet restore Youth.csproj
#
#      - name: Build MAUI MacCatalyst
#        run: dotnet publish Youth.csproj -c Release -f net8.0-maccatalyst --no-restore -p:BuildIpa=True
#
#      - name: Upload MacCatalyst Artifact
#        uses: actions/upload-artifact@v4.3.4
#        with:
#          name: market-macos-ci-build
#          path: bin/Release/net8.0-maccatalyst/maccatalyst-x64/publish/*.pkg
